{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","goodsWithID","map","product","index","id","App","state","selectedProducts","addGoods","productName","includes","setState","removeGoods","filter","resetGoods","this","className","length","type","onClick","join","item","key","classNames","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAcD,EAAgBE,KAAI,SAACC,EAASC,GAAV,MAAqB,CAC3DD,UACAE,GAAID,EAAQ,MAGDE,EAAb,4MACEC,MAAQ,CACNC,iBAAkB,IAFtB,EAKEC,SAAW,SAACC,GAAiB,IACnBF,EAAqB,EAAKD,MAA1BC,iBAEHA,EAAiBG,SAASD,IAC7B,EAAKE,SAAS,CACZJ,iBAAiB,GAAD,mBAAMA,GAAN,CAAwBE,OAVhD,EAeEG,YAAc,SAACH,GAAiB,IACtBF,EAAqB,EAAKD,MAA1BC,iBAER,EAAKI,SAAS,CACZJ,iBAAiB,YAAKA,EAAiBM,QACrC,SAAAX,GAAO,OAAIA,IAAYO,SApB/B,EAyBEK,WAAa,WACX,EAAKH,SAAS,CACZJ,iBAAkB,MA3BxB,4CA+BE,WAAU,IAAD,OACCA,EAAqBQ,KAAKT,MAA1BC,iBAER,OACE,yBAAKS,UAAU,OACZT,EAAiBU,OAAS,GAEzB,4BACEC,KAAK,SACLC,QAASJ,KAAKD,YAFhB,KAQF,4BACGP,EAAiBU,OAAS,EAA1B,UACMV,EAAiBa,KAAK,MAD5B,gBAEG,qBAGN,4BACGpB,EAAYC,KAAI,SAAAoB,GAAI,OACnB,wBAAIC,IAAKD,EAAKjB,IACZ,0BACEY,UACEO,IAAW,CACTC,SAAUjB,EAAiBG,SAASW,EAAKnB,YAG5CmB,EAAKnB,UAELK,EAAiBG,SAASW,EAAKnB,UAElC,4BACEgB,KAAK,SACLC,QAAS,WACP,EAAKX,SAASa,EAAKnB,WAHvB,QAUGK,EAAiBG,SAASW,EAAKnB,UAElC,4BACEgB,KAAK,SACLC,QAAS,WACP,EAAKP,YAAYS,EAAKnB,WAH1B,eAaLH,EAAgBkB,YA1FzB,GAAyBQ,IAAMC,WClB/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.02edacec.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithID = goodsFromServer.map((product, index) => ({\n  product,\n  id: index + 1,\n}));\n\nexport class App extends React.Component {\n  state = {\n    selectedProducts: [],\n  }\n\n  addGoods = (productName) => {\n    const { selectedProducts } = this.state;\n\n    if (!selectedProducts.includes(productName)) {\n      this.setState({\n        selectedProducts: [...selectedProducts, productName],\n      });\n    }\n  };\n\n  removeGoods = (productName) => {\n    const { selectedProducts } = this.state;\n\n    this.setState({\n      selectedProducts: [...selectedProducts.filter(\n        product => product !== productName,\n      )],\n    });\n  }\n\n  resetGoods = () => {\n    this.setState({\n      selectedProducts: [],\n    });\n  }\n\n  render() {\n    const { selectedProducts } = this.state;\n\n    return (\n      <div className=\"App\">\n        {selectedProducts.length > 0\n          && (\n          <button\n            type=\"button\"\n            onClick={this.resetGoods}\n          >\n            X\n          </button>\n          )\n        }\n        <h1>\n          {selectedProducts.length > 0\n            ? `${selectedProducts.join(', ')} is selected`\n            : 'No goods selected'\n          }\n        </h1>\n        <ul>\n          {goodsWithID.map(item => (\n            <li key={item.id}>\n              <span\n                className={\n                  classNames({\n                    selected: selectedProducts.includes(item.product),\n                  })}\n              >\n                {item.product}\n              </span>\n              { !selectedProducts.includes(item.product)\n              && (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.addGoods(item.product);\n                }}\n              >\n                Add\n              </button>\n              )\n              }\n              { !selectedProducts.includes(item.product)\n              || (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.removeGoods(item.product);\n                }}\n              >\n                Remove\n              </button>\n              )\n              }\n            </li>\n          ))}\n        </ul>\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}